type token =
  | CONS_N of (
# 15 "src/my_parser.mly"
        int
# 6 "src/my_parser.ml"
)
  | CONS_F of (
# 16 "src/my_parser.mly"
        float
# 11 "src/my_parser.ml"
)
  | CONS_B of (
# 17 "src/my_parser.mly"
        bool
# 16 "src/my_parser.ml"
)
  | IDENT of (
# 18 "src/my_parser.mly"
        string
# 21 "src/my_parser.ml"
)
  | FNAME of (
# 19 "src/my_parser.mly"
        string
# 26 "src/my_parser.ml"
)
  | CONS_VN of (
# 20 "src/my_parser.mly"
        int * int list
# 31 "src/my_parser.ml"
)
  | CONS_VF of (
# 21 "src/my_parser.mly"
        int * float list
# 36 "src/my_parser.ml"
)
  | CONS_MN of (
# 22 "src/my_parser.mly"
        int * int * int list list
# 41 "src/my_parser.ml"
)
  | CONS_MF of (
# 23 "src/my_parser.mly"
        int * int * float list list
# 46 "src/my_parser.ml"
)
  | DEF_VN
  | DEF_VF
  | DEF_MN
  | DEF_MF
  | INT_T
  | FLOAT_T
  | BOOL_T
  | VECTOR_N_T
  | VECTOR_F_T
  | MATRIX_N_T
  | MATRIX_F_T
  | ADD
  | MUL
  | SUB
  | DIV
  | ABS
  | MODULO
  | EQ
  | NEQ
  | LT
  | GT
  | LE
  | GE
  | ADD_VEC
  | SCAL_VEC
  | DOT_PROD
  | ANGLE_VEC
  | MAG_VEC
  | DIM_VEC
  | ADD_MAT
  | SCAL_MAT
  | MAT_MUL_MAT
  | TRP_MAT
  | DET_MAT
  | INV
  | NOT
  | AND
  | OR
  | NEG
  | LPAREN
  | RPAREN
  | LBRACE
  | RBRACE
  | LSQUARE
  | RSQUARE
  | IF
  | THEN
  | ELSE
  | ELSE_IF
  | WHILE
  | FOR
  | RETURN
  | BREAK
  | CONTINUE
  | PRINT
  | INPUT
  | SEMICOLON
  | ASSIGN
  | COMMA
  | COLON
  | QMARK
  | EOF

open Parsing
let _ = parse_error;;
# 7 "src/my_parser.mly"
    open My_ast
# 115 "src/my_parser.ml"
let yytransl_const = [|
  266 (* DEF_VN *);
  267 (* DEF_VF *);
  268 (* DEF_MN *);
  269 (* DEF_MF *);
  270 (* INT_T *);
  271 (* FLOAT_T *);
  272 (* BOOL_T *);
  273 (* VECTOR_N_T *);
  274 (* VECTOR_F_T *);
  275 (* MATRIX_N_T *);
  276 (* MATRIX_F_T *);
  277 (* ADD *);
  278 (* MUL *);
  279 (* SUB *);
  280 (* DIV *);
  281 (* ABS *);
  282 (* MODULO *);
  283 (* EQ *);
  284 (* NEQ *);
  285 (* LT *);
  286 (* GT *);
  287 (* LE *);
  288 (* GE *);
  289 (* ADD_VEC *);
  290 (* SCAL_VEC *);
  291 (* DOT_PROD *);
  292 (* ANGLE_VEC *);
  293 (* MAG_VEC *);
  294 (* DIM_VEC *);
  295 (* ADD_MAT *);
  296 (* SCAL_MAT *);
  297 (* MAT_MUL_MAT *);
  298 (* TRP_MAT *);
  299 (* DET_MAT *);
  300 (* INV *);
  301 (* NOT *);
  302 (* AND *);
  303 (* OR *);
  304 (* NEG *);
  305 (* LPAREN *);
  306 (* RPAREN *);
  307 (* LBRACE *);
  308 (* RBRACE *);
  309 (* LSQUARE *);
  310 (* RSQUARE *);
  311 (* IF *);
  312 (* THEN *);
  313 (* ELSE *);
  314 (* ELSE_IF *);
  315 (* WHILE *);
  316 (* FOR *);
  317 (* RETURN *);
  318 (* BREAK *);
  319 (* CONTINUE *);
  320 (* PRINT *);
  321 (* INPUT *);
  322 (* SEMICOLON *);
  323 (* ASSIGN *);
  324 (* COMMA *);
  325 (* COLON *);
  326 (* QMARK *);
    0 (* EOF *);
    0|]

let yytransl_block = [|
  257 (* CONS_N *);
  258 (* CONS_F *);
  259 (* CONS_B *);
  260 (* IDENT *);
  261 (* FNAME *);
  262 (* CONS_VN *);
  263 (* CONS_VF *);
  264 (* CONS_MN *);
  265 (* CONS_MF *);
    0|]

let yylhs = "\255\255\
\002\000\002\000\002\000\002\000\003\000\003\000\004\000\004\000\
\005\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
\006\000\006\000\007\000\007\000\008\000\008\000\008\000\008\000\
\008\000\008\000\008\000\008\000\008\000\008\000\008\000\008\000\
\008\000\008\000\008\000\008\000\008\000\008\000\008\000\008\000\
\008\000\008\000\008\000\008\000\008\000\008\000\008\000\008\000\
\008\000\008\000\008\000\008\000\008\000\008\000\008\000\008\000\
\008\000\008\000\008\000\008\000\009\000\009\000\009\000\009\000\
\009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
\009\000\009\000\009\000\009\000\009\000\009\000\010\000\010\000\
\001\000\000\000"

let yylen = "\002\000\
\003\000\003\000\003\000\003\000\003\000\004\000\005\000\003\000\
\005\000\001\000\001\000\001\000\001\000\001\000\001\000\001\000\
\001\000\001\000\004\000\007\000\001\000\001\000\001\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\002\000\002\000\002\000\
\002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
\003\000\004\000\005\000\003\000\005\000\005\000\005\000\005\000\
\005\000\005\000\005\000\003\000\008\000\004\000\006\000\004\000\
\004\000\005\000\003\000\002\000\002\000\003\000\000\000\002\000\
\002\000\002\000"

let yydefred = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\082\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\011\000\012\000\000\000\013\000\014\000\015\000\016\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\017\000\018\000\021\000\
\023\000\000\000\000\000\000\000\000\000\076\000\077\000\000\000\
\000\000\080\000\081\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\078\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\068\000\000\000\075\000\000\000\
\000\000\000\000\072\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\005\000\000\000\060\000\
\000\000\057\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\073\000\000\000\061\000\062\000\
\063\000\064\000\065\000\066\000\067\000\000\000\000\000\000\000\
\000\000\006\000\058\000\000\000\000\000\000\000\074\000\000\000\
\000\000\009\000\000\000\003\000\000\000\004\000\071\000\000\000\
\000\000\020\000\000\000\000\000\000\000\069\000\007\000"

let yydgoto = "\002\000\
\019\000\135\000\054\000\175\000\055\000\056\000\057\000\058\000\
\021\000\022\000"

let yysindex = "\008\000\
\183\008\000\000\210\254\013\255\019\255\022\255\043\255\045\255\
\046\255\048\255\183\008\171\008\171\008\226\254\171\008\238\254\
\243\254\008\255\000\000\002\255\183\008\070\000\171\008\171\008\
\004\255\005\255\006\255\007\255\009\255\010\255\011\255\023\255\
\003\255\000\000\000\000\026\255\000\000\000\000\000\000\000\000\
\171\008\171\008\171\008\171\008\171\008\171\008\171\008\171\008\
\171\008\171\008\171\008\171\008\031\255\000\000\000\000\000\000\
\000\000\227\008\117\005\183\008\016\009\000\000\000\000\171\008\
\171\008\000\000\000\000\066\009\111\009\171\008\171\008\171\008\
\171\008\171\008\171\008\171\008\000\000\029\255\014\255\015\255\
\015\255\149\005\015\255\015\255\015\255\015\255\015\255\015\255\
\015\255\015\255\161\009\001\255\171\008\171\008\171\008\171\008\
\171\008\171\008\171\008\171\008\171\008\171\008\171\008\171\008\
\171\008\171\008\171\008\171\008\171\008\171\008\171\008\171\008\
\171\008\171\008\183\008\171\008\000\000\171\008\000\000\193\009\
\225\009\052\255\000\000\019\010\069\010\119\010\169\010\219\010\
\013\011\063\011\056\255\047\255\057\255\000\000\027\255\000\000\
\060\255\000\000\015\255\015\255\149\005\015\255\149\005\015\255\
\015\255\048\012\048\012\048\012\048\012\048\012\048\012\149\005\
\015\255\015\255\015\255\149\005\015\255\015\255\016\012\240\011\
\054\255\113\011\145\011\050\255\000\000\171\008\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\028\255\058\255\042\255\
\044\255\000\000\000\000\183\008\171\008\183\008\000\000\195\011\
\059\255\000\000\057\255\000\000\047\255\000\000\000\000\016\012\
\074\255\000\000\061\255\183\008\056\255\000\000\000\000"

let yyrindex = "\000\000\
\126\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\075\255\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\055\000\000\000\000\000\116\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\000\
\238\000\178\005\043\001\104\001\165\001\226\001\031\002\092\002\
\153\002\214\002\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\170\255\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\019\003\080\003\239\005\141\003\044\006\202\003\
\007\004\227\006\032\007\093\007\154\007\215\007\020\008\105\006\
\068\004\129\004\190\004\166\006\251\004\056\005\103\255\102\008\
\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\076\255\000\000\077\255\000\000\000\000\041\008\
\000\000\000\000\079\255\000\000\000\000\000\000\000\000"

let yygindex = "\000\000\
\000\000\104\255\000\000\187\255\000\000\000\000\255\255\246\255\
\208\255\253\255"

let yytablesize = 3417
let yytable = "\020\000\
\070\000\079\000\059\000\078\000\061\000\137\000\023\000\032\000\
\001\000\020\000\117\000\118\000\068\000\069\000\132\000\133\000\
\025\000\066\000\060\000\020\000\024\000\185\000\026\000\188\000\
\190\000\027\000\093\000\094\000\132\000\133\000\080\000\081\000\
\082\000\083\000\084\000\085\000\086\000\087\000\088\000\089\000\
\090\000\091\000\132\000\187\000\189\000\133\000\028\000\062\000\
\029\000\030\000\138\000\031\000\063\000\120\000\121\000\079\000\
\064\000\020\000\020\000\124\000\125\000\126\000\127\000\128\000\
\129\000\130\000\161\000\134\000\065\000\067\000\070\000\071\000\
\072\000\073\000\077\000\074\000\075\000\076\000\023\000\092\000\
\178\000\131\000\139\000\140\000\141\000\142\000\143\000\144\000\
\145\000\146\000\147\000\148\000\149\000\150\000\151\000\152\000\
\153\000\154\000\155\000\156\000\157\000\158\000\159\000\160\000\
\166\000\162\000\024\000\163\000\174\000\179\000\180\000\186\000\
\195\000\020\000\176\000\183\000\024\000\024\000\024\000\024\000\
\024\000\024\000\024\000\196\000\177\000\079\000\079\000\199\000\
\197\000\001\000\002\000\191\000\008\000\193\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\198\000\024\000\024\000\000\000\000\000\
\024\000\024\000\000\000\184\000\024\000\024\000\024\000\000\000\
\000\000\024\000\024\000\024\000\024\000\024\000\024\000\000\000\
\024\000\000\000\192\000\024\000\000\000\019\000\000\000\000\000\
\000\000\000\000\020\000\000\000\020\000\019\000\019\000\019\000\
\019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
\019\000\019\000\020\000\019\000\019\000\019\000\019\000\019\000\
\019\000\019\000\019\000\019\000\019\000\019\000\000\000\000\000\
\019\000\019\000\019\000\000\000\000\000\000\000\000\000\019\000\
\019\000\000\000\000\000\019\000\019\000\000\000\000\000\019\000\
\019\000\019\000\000\000\000\000\019\000\019\000\019\000\019\000\
\019\000\019\000\000\000\019\000\019\000\000\000\019\000\019\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\070\000\070\000\070\000\070\000\000\000\070\000\070\000\
\070\000\070\000\070\000\070\000\000\000\000\000\070\000\070\000\
\070\000\070\000\070\000\070\000\070\000\000\000\000\000\070\000\
\000\000\070\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\070\000\070\000\000\000\
\000\000\000\000\070\000\070\000\070\000\070\000\000\000\000\000\
\070\000\070\000\070\000\070\000\070\000\079\000\000\000\070\000\
\000\000\000\000\010\000\070\000\070\000\070\000\070\000\070\000\
\070\000\070\000\010\000\010\000\010\000\010\000\010\000\010\000\
\010\000\010\000\010\000\010\000\010\000\010\000\010\000\000\000\
\010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
\010\000\010\000\010\000\000\000\000\000\010\000\010\000\010\000\
\000\000\000\000\000\000\000\000\010\000\010\000\000\000\000\000\
\010\000\010\000\000\000\000\000\010\000\010\000\010\000\000\000\
\000\000\010\000\010\000\010\000\010\000\010\000\010\000\022\000\
\010\000\000\000\000\000\010\000\010\000\000\000\000\000\022\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
\022\000\022\000\022\000\022\000\000\000\022\000\022\000\022\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
\000\000\000\000\022\000\022\000\022\000\000\000\000\000\000\000\
\000\000\022\000\022\000\000\000\000\000\022\000\022\000\000\000\
\000\000\022\000\022\000\022\000\000\000\000\000\022\000\022\000\
\022\000\022\000\022\000\022\000\046\000\022\000\000\000\000\000\
\022\000\022\000\000\000\000\000\000\000\000\000\046\000\046\000\
\046\000\046\000\046\000\046\000\046\000\046\000\046\000\046\000\
\046\000\000\000\046\000\046\000\046\000\046\000\046\000\046\000\
\046\000\046\000\046\000\046\000\046\000\000\000\000\000\046\000\
\046\000\046\000\000\000\000\000\000\000\000\000\046\000\046\000\
\000\000\000\000\046\000\046\000\000\000\000\000\046\000\046\000\
\046\000\000\000\000\000\046\000\046\000\046\000\046\000\046\000\
\046\000\047\000\046\000\000\000\000\000\046\000\046\000\000\000\
\000\000\000\000\000\000\047\000\047\000\047\000\047\000\047\000\
\047\000\047\000\047\000\047\000\047\000\047\000\000\000\047\000\
\047\000\047\000\047\000\047\000\047\000\047\000\047\000\047\000\
\047\000\047\000\000\000\000\000\047\000\047\000\047\000\000\000\
\000\000\000\000\000\000\047\000\047\000\000\000\000\000\047\000\
\047\000\000\000\000\000\047\000\047\000\047\000\000\000\000\000\
\047\000\047\000\047\000\047\000\047\000\047\000\055\000\047\000\
\000\000\000\000\047\000\047\000\000\000\000\000\000\000\000\000\
\055\000\055\000\055\000\055\000\055\000\055\000\055\000\055\000\
\055\000\055\000\055\000\000\000\055\000\055\000\055\000\055\000\
\055\000\055\000\055\000\055\000\055\000\055\000\055\000\000\000\
\000\000\055\000\055\000\055\000\000\000\000\000\000\000\000\000\
\055\000\055\000\000\000\000\000\055\000\055\000\000\000\000\000\
\055\000\055\000\055\000\000\000\000\000\055\000\055\000\055\000\
\055\000\055\000\055\000\048\000\055\000\000\000\000\000\055\000\
\055\000\000\000\000\000\000\000\000\000\048\000\048\000\048\000\
\048\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
\000\000\048\000\048\000\048\000\048\000\048\000\048\000\048\000\
\048\000\048\000\048\000\048\000\000\000\000\000\048\000\048\000\
\048\000\000\000\000\000\000\000\000\000\048\000\048\000\000\000\
\000\000\048\000\048\000\000\000\000\000\048\000\048\000\048\000\
\000\000\000\000\048\000\048\000\048\000\048\000\048\000\048\000\
\049\000\048\000\000\000\000\000\048\000\048\000\000\000\000\000\
\000\000\000\000\049\000\049\000\049\000\049\000\049\000\049\000\
\049\000\049\000\049\000\049\000\049\000\000\000\049\000\049\000\
\049\000\049\000\049\000\049\000\049\000\049\000\049\000\049\000\
\049\000\000\000\000\000\049\000\049\000\049\000\000\000\000\000\
\000\000\000\000\049\000\049\000\000\000\000\000\049\000\049\000\
\000\000\000\000\049\000\049\000\049\000\000\000\000\000\049\000\
\049\000\049\000\049\000\049\000\049\000\053\000\049\000\000\000\
\000\000\049\000\049\000\000\000\000\000\000\000\000\000\053\000\
\053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
\053\000\053\000\000\000\053\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\053\000\053\000\053\000\000\000\000\000\
\053\000\053\000\053\000\000\000\000\000\000\000\000\000\053\000\
\053\000\000\000\000\000\053\000\053\000\000\000\000\000\053\000\
\053\000\053\000\000\000\000\000\053\000\053\000\053\000\053\000\
\053\000\053\000\054\000\053\000\000\000\000\000\053\000\053\000\
\000\000\000\000\000\000\000\000\054\000\054\000\054\000\054\000\
\054\000\054\000\054\000\054\000\054\000\054\000\054\000\000\000\
\054\000\054\000\054\000\054\000\054\000\054\000\054\000\054\000\
\054\000\054\000\054\000\000\000\000\000\054\000\054\000\054\000\
\000\000\000\000\000\000\000\000\054\000\054\000\000\000\000\000\
\054\000\054\000\000\000\000\000\054\000\054\000\054\000\000\000\
\000\000\054\000\054\000\054\000\054\000\054\000\054\000\056\000\
\054\000\000\000\000\000\054\000\054\000\000\000\000\000\000\000\
\000\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
\056\000\056\000\056\000\056\000\000\000\056\000\056\000\056\000\
\056\000\056\000\056\000\056\000\056\000\056\000\056\000\056\000\
\000\000\000\000\056\000\056\000\056\000\000\000\000\000\000\000\
\000\000\056\000\056\000\000\000\000\000\056\000\056\000\000\000\
\000\000\056\000\056\000\056\000\000\000\000\000\056\000\056\000\
\056\000\056\000\056\000\056\000\050\000\056\000\000\000\000\000\
\056\000\056\000\000\000\000\000\000\000\000\000\050\000\050\000\
\050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
\050\000\000\000\050\000\050\000\050\000\050\000\050\000\050\000\
\050\000\050\000\050\000\050\000\050\000\000\000\000\000\050\000\
\050\000\050\000\000\000\000\000\000\000\000\000\050\000\050\000\
\000\000\000\000\050\000\050\000\000\000\000\000\050\000\050\000\
\050\000\000\000\000\000\050\000\050\000\050\000\050\000\050\000\
\050\000\051\000\050\000\000\000\000\000\050\000\050\000\000\000\
\000\000\000\000\000\000\051\000\051\000\051\000\051\000\051\000\
\051\000\051\000\051\000\051\000\051\000\051\000\000\000\051\000\
\051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
\051\000\051\000\000\000\000\000\051\000\051\000\051\000\000\000\
\000\000\000\000\000\000\051\000\051\000\000\000\000\000\051\000\
\051\000\000\000\000\000\051\000\051\000\051\000\000\000\000\000\
\051\000\051\000\051\000\051\000\051\000\051\000\044\000\051\000\
\000\000\000\000\051\000\051\000\000\000\000\000\000\000\000\000\
\044\000\044\000\044\000\044\000\044\000\044\000\044\000\044\000\
\044\000\044\000\044\000\000\000\044\000\044\000\044\000\044\000\
\044\000\044\000\044\000\044\000\044\000\044\000\044\000\000\000\
\000\000\044\000\044\000\044\000\000\000\000\000\000\000\000\000\
\044\000\044\000\000\000\000\000\044\000\044\000\000\000\000\000\
\044\000\044\000\044\000\000\000\000\000\044\000\044\000\044\000\
\044\000\044\000\044\000\045\000\044\000\000\000\000\000\044\000\
\044\000\000\000\000\000\000\000\000\000\045\000\045\000\045\000\
\045\000\045\000\045\000\045\000\045\000\045\000\045\000\045\000\
\000\000\045\000\045\000\045\000\045\000\045\000\045\000\045\000\
\045\000\045\000\045\000\045\000\000\000\000\000\045\000\045\000\
\045\000\000\000\000\000\000\000\000\000\045\000\045\000\000\000\
\000\000\045\000\045\000\000\000\000\000\045\000\045\000\045\000\
\000\000\000\000\045\000\045\000\045\000\045\000\045\000\045\000\
\028\000\045\000\000\000\000\000\045\000\045\000\000\000\000\000\
\000\000\000\000\028\000\028\000\028\000\028\000\028\000\028\000\
\028\000\028\000\028\000\028\000\028\000\000\000\028\000\028\000\
\028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
\028\000\000\000\000\000\028\000\028\000\028\000\000\000\000\000\
\000\000\000\000\028\000\028\000\000\000\000\000\028\000\028\000\
\000\000\000\000\028\000\028\000\028\000\000\000\000\000\028\000\
\028\000\028\000\028\000\028\000\028\000\029\000\028\000\000\000\
\000\000\028\000\028\000\000\000\000\000\000\000\000\000\029\000\
\029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
\029\000\029\000\000\000\029\000\029\000\029\000\029\000\029\000\
\029\000\029\000\029\000\029\000\029\000\029\000\000\000\000\000\
\029\000\029\000\029\000\000\000\000\000\000\000\000\000\029\000\
\029\000\000\000\000\000\029\000\029\000\000\000\000\000\029\000\
\029\000\029\000\000\000\000\000\029\000\029\000\029\000\029\000\
\029\000\029\000\030\000\029\000\000\000\000\000\029\000\029\000\
\000\000\000\000\000\000\000\000\030\000\030\000\030\000\030\000\
\030\000\030\000\030\000\030\000\030\000\030\000\030\000\000\000\
\030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
\030\000\030\000\030\000\000\000\000\000\030\000\030\000\030\000\
\000\000\000\000\000\000\000\000\030\000\030\000\000\000\000\000\
\030\000\030\000\000\000\000\000\030\000\030\000\030\000\000\000\
\000\000\030\000\030\000\030\000\030\000\030\000\030\000\037\000\
\030\000\000\000\000\000\030\000\030\000\000\000\000\000\000\000\
\000\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
\037\000\037\000\037\000\037\000\000\000\037\000\037\000\037\000\
\037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
\000\000\000\000\037\000\037\000\037\000\000\000\000\000\000\000\
\000\000\037\000\037\000\000\000\000\000\037\000\037\000\000\000\
\000\000\037\000\037\000\037\000\000\000\000\000\037\000\037\000\
\037\000\037\000\037\000\037\000\042\000\037\000\000\000\000\000\
\037\000\037\000\000\000\000\000\000\000\000\000\042\000\042\000\
\042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
\042\000\000\000\042\000\042\000\042\000\042\000\042\000\042\000\
\042\000\042\000\042\000\042\000\042\000\000\000\000\000\042\000\
\042\000\042\000\000\000\000\000\000\000\000\000\042\000\042\000\
\000\000\000\000\042\000\042\000\000\000\000\000\042\000\042\000\
\042\000\000\000\000\000\042\000\042\000\042\000\042\000\042\000\
\042\000\043\000\042\000\000\000\000\000\042\000\042\000\000\000\
\000\000\000\000\000\000\043\000\043\000\043\000\043\000\043\000\
\043\000\043\000\043\000\043\000\043\000\043\000\000\000\043\000\
\043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
\043\000\043\000\000\000\000\000\043\000\043\000\043\000\000\000\
\000\000\000\000\000\000\043\000\043\000\000\000\000\000\043\000\
\043\000\000\000\000\000\043\000\043\000\043\000\000\000\000\000\
\043\000\043\000\043\000\043\000\043\000\043\000\038\000\043\000\
\000\000\000\000\043\000\043\000\000\000\000\000\000\000\000\000\
\038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
\038\000\038\000\038\000\000\000\038\000\038\000\038\000\038\000\
\038\000\038\000\038\000\038\000\038\000\038\000\038\000\000\000\
\000\000\038\000\038\000\038\000\000\000\000\000\000\000\000\000\
\038\000\038\000\000\000\000\000\038\000\038\000\000\000\000\000\
\038\000\038\000\038\000\000\000\000\000\038\000\038\000\038\000\
\038\000\038\000\038\000\041\000\038\000\000\000\000\000\038\000\
\038\000\000\000\000\000\000\000\000\000\041\000\041\000\041\000\
\041\000\041\000\041\000\041\000\041\000\041\000\041\000\041\000\
\000\000\041\000\041\000\041\000\041\000\041\000\041\000\041\000\
\041\000\041\000\041\000\041\000\000\000\000\000\041\000\041\000\
\041\000\000\000\000\000\000\000\000\000\041\000\041\000\000\000\
\000\000\041\000\041\000\000\000\000\000\041\000\041\000\041\000\
\000\000\000\000\041\000\041\000\041\000\041\000\041\000\041\000\
\003\000\041\000\000\000\000\000\041\000\041\000\000\000\000\000\
\093\000\094\000\004\000\005\000\006\000\007\000\008\000\009\000\
\010\000\095\000\096\000\097\000\098\000\000\000\099\000\100\000\
\101\000\102\000\103\000\104\000\105\000\106\000\107\000\108\000\
\109\000\000\000\000\000\110\000\111\000\112\000\000\000\000\000\
\093\000\094\000\113\000\114\000\000\000\000\000\000\000\011\000\
\000\000\000\000\096\000\012\000\098\000\000\000\099\000\013\000\
\014\000\015\000\016\000\017\000\018\000\052\000\107\000\108\000\
\109\000\000\000\116\000\000\000\111\000\112\000\000\000\052\000\
\052\000\052\000\052\000\052\000\052\000\052\000\052\000\000\000\
\052\000\000\000\000\000\000\000\052\000\052\000\052\000\052\000\
\052\000\052\000\052\000\000\000\000\000\000\000\000\000\000\000\
\052\000\000\000\000\000\000\000\000\000\000\000\000\000\052\000\
\052\000\000\000\000\000\052\000\052\000\000\000\000\000\052\000\
\052\000\052\000\000\000\000\000\052\000\052\000\052\000\052\000\
\052\000\052\000\026\000\052\000\000\000\000\000\052\000\052\000\
\000\000\000\000\000\000\000\000\026\000\026\000\026\000\026\000\
\026\000\026\000\026\000\026\000\000\000\026\000\000\000\000\000\
\000\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
\000\000\000\000\000\000\000\000\000\000\026\000\000\000\000\000\
\000\000\000\000\000\000\000\000\026\000\026\000\000\000\000\000\
\026\000\026\000\000\000\000\000\026\000\026\000\026\000\000\000\
\000\000\026\000\026\000\026\000\026\000\026\000\026\000\027\000\
\026\000\000\000\000\000\026\000\026\000\000\000\000\000\000\000\
\000\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
\027\000\000\000\027\000\000\000\000\000\000\000\027\000\027\000\
\027\000\027\000\027\000\027\000\027\000\000\000\000\000\000\000\
\000\000\000\000\027\000\000\000\000\000\000\000\000\000\000\000\
\000\000\027\000\027\000\000\000\000\000\027\000\027\000\000\000\
\000\000\027\000\027\000\027\000\000\000\000\000\027\000\027\000\
\027\000\027\000\027\000\027\000\039\000\027\000\000\000\000\000\
\027\000\027\000\000\000\000\000\000\000\000\000\039\000\039\000\
\039\000\039\000\039\000\039\000\039\000\039\000\000\000\039\000\
\000\000\000\000\000\000\039\000\039\000\039\000\039\000\039\000\
\039\000\039\000\000\000\000\000\000\000\000\000\000\000\039\000\
\000\000\000\000\000\000\000\000\000\000\000\000\039\000\039\000\
\000\000\000\000\039\000\039\000\000\000\000\000\039\000\039\000\
\039\000\000\000\000\000\039\000\039\000\039\000\039\000\039\000\
\039\000\040\000\039\000\000\000\000\000\039\000\039\000\000\000\
\000\000\000\000\000\000\040\000\040\000\040\000\040\000\040\000\
\040\000\040\000\040\000\000\000\040\000\000\000\000\000\000\000\
\040\000\040\000\040\000\040\000\040\000\040\000\040\000\000\000\
\000\000\000\000\000\000\000\000\040\000\000\000\000\000\000\000\
\000\000\000\000\000\000\040\000\040\000\000\000\000\000\040\000\
\040\000\000\000\000\000\040\000\040\000\040\000\000\000\000\000\
\040\000\040\000\040\000\040\000\040\000\040\000\031\000\040\000\
\000\000\000\000\040\000\040\000\000\000\000\000\000\000\000\000\
\031\000\031\000\031\000\031\000\031\000\031\000\031\000\000\000\
\000\000\000\000\000\000\000\000\000\000\031\000\031\000\031\000\
\031\000\031\000\031\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\031\000\031\000\000\000\000\000\031\000\031\000\000\000\000\000\
\031\000\031\000\031\000\000\000\000\000\031\000\031\000\031\000\
\031\000\031\000\031\000\032\000\031\000\000\000\000\000\031\000\
\031\000\000\000\000\000\000\000\000\000\032\000\032\000\032\000\
\032\000\032\000\032\000\032\000\000\000\000\000\000\000\000\000\
\000\000\000\000\032\000\032\000\032\000\032\000\032\000\032\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\032\000\032\000\000\000\
\000\000\032\000\032\000\000\000\000\000\032\000\032\000\032\000\
\000\000\000\000\032\000\032\000\032\000\032\000\032\000\032\000\
\033\000\032\000\000\000\000\000\032\000\032\000\000\000\000\000\
\000\000\000\000\033\000\033\000\033\000\033\000\033\000\033\000\
\033\000\000\000\000\000\000\000\000\000\000\000\000\000\033\000\
\033\000\033\000\033\000\033\000\033\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\033\000\033\000\000\000\000\000\033\000\033\000\
\000\000\000\000\033\000\033\000\033\000\000\000\000\000\033\000\
\033\000\033\000\033\000\033\000\033\000\034\000\033\000\000\000\
\000\000\033\000\033\000\000\000\000\000\000\000\000\000\034\000\
\034\000\034\000\034\000\034\000\034\000\034\000\000\000\000\000\
\000\000\000\000\000\000\000\000\034\000\034\000\034\000\034\000\
\034\000\034\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\000\
\034\000\000\000\000\000\034\000\034\000\000\000\000\000\034\000\
\034\000\034\000\000\000\000\000\034\000\034\000\034\000\034\000\
\034\000\034\000\035\000\034\000\000\000\000\000\034\000\034\000\
\000\000\000\000\000\000\000\000\035\000\035\000\035\000\035\000\
\035\000\035\000\035\000\000\000\000\000\000\000\000\000\000\000\
\000\000\035\000\035\000\035\000\035\000\035\000\035\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\035\000\035\000\000\000\000\000\
\035\000\035\000\000\000\000\000\035\000\035\000\035\000\000\000\
\000\000\035\000\035\000\035\000\035\000\035\000\035\000\036\000\
\035\000\000\000\000\000\035\000\035\000\000\000\000\000\000\000\
\000\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
\000\000\000\000\000\000\000\000\059\000\000\000\036\000\036\000\
\036\000\036\000\036\000\036\000\000\000\000\000\059\000\059\000\
\059\000\059\000\059\000\059\000\059\000\000\000\000\000\000\000\
\000\000\036\000\036\000\000\000\000\000\036\000\036\000\000\000\
\000\000\036\000\036\000\036\000\000\000\000\000\036\000\036\000\
\036\000\036\000\036\000\036\000\000\000\036\000\059\000\059\000\
\036\000\036\000\059\000\059\000\000\000\000\000\059\000\059\000\
\059\000\000\000\000\000\059\000\059\000\059\000\059\000\059\000\
\059\000\025\000\059\000\000\000\000\000\059\000\000\000\000\000\
\000\000\000\000\000\000\025\000\025\000\025\000\025\000\025\000\
\025\000\025\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\025\000\000\000\000\000\025\000\
\025\000\000\000\000\000\025\000\025\000\025\000\000\000\000\000\
\025\000\025\000\025\000\025\000\025\000\025\000\000\000\025\000\
\000\000\000\000\025\000\033\000\034\000\035\000\036\000\000\000\
\037\000\038\000\039\000\040\000\041\000\042\000\000\000\000\000\
\000\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\
\000\000\043\000\000\000\044\000\004\000\005\000\006\000\007\000\
\008\000\009\000\010\000\000\000\000\000\000\000\000\000\045\000\
\046\000\000\000\000\000\000\000\047\000\048\000\049\000\050\000\
\000\000\000\000\051\000\052\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\011\000\000\000\053\000\000\000\012\000\093\000\094\000\
\000\000\013\000\014\000\015\000\016\000\017\000\018\000\095\000\
\096\000\097\000\098\000\000\000\099\000\100\000\101\000\102\000\
\103\000\104\000\105\000\106\000\107\000\108\000\109\000\000\000\
\000\000\110\000\111\000\112\000\000\000\000\000\000\000\000\000\
\113\000\114\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\115\000\093\000\094\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\095\000\096\000\097\000\098\000\
\116\000\099\000\100\000\101\000\102\000\103\000\104\000\105\000\
\106\000\107\000\108\000\109\000\000\000\000\000\110\000\111\000\
\112\000\000\000\000\000\000\000\000\000\113\000\114\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\093\000\094\000\000\000\
\000\000\119\000\000\000\000\000\000\000\116\000\095\000\096\000\
\097\000\098\000\000\000\099\000\100\000\101\000\102\000\103\000\
\104\000\105\000\106\000\107\000\108\000\109\000\000\000\000\000\
\110\000\111\000\112\000\000\000\000\000\000\000\000\000\113\000\
\114\000\000\000\000\000\000\000\000\000\000\000\000\000\122\000\
\000\000\000\000\093\000\094\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\095\000\096\000\097\000\098\000\116\000\
\099\000\100\000\101\000\102\000\103\000\104\000\105\000\106\000\
\107\000\108\000\109\000\000\000\000\000\110\000\111\000\112\000\
\000\000\000\000\000\000\000\000\113\000\114\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\093\000\094\000\000\000\000\000\
\123\000\000\000\000\000\000\000\116\000\095\000\096\000\097\000\
\098\000\000\000\099\000\100\000\101\000\102\000\103\000\104\000\
\105\000\106\000\107\000\108\000\109\000\000\000\000\000\110\000\
\111\000\112\000\000\000\000\000\093\000\094\000\113\000\114\000\
\000\000\000\000\136\000\000\000\000\000\095\000\096\000\097\000\
\098\000\000\000\099\000\100\000\101\000\102\000\103\000\104\000\
\105\000\106\000\107\000\108\000\109\000\000\000\116\000\110\000\
\111\000\112\000\000\000\000\000\093\000\094\000\113\000\114\000\
\000\000\000\000\164\000\000\000\000\000\095\000\096\000\097\000\
\098\000\000\000\099\000\100\000\101\000\102\000\103\000\104\000\
\105\000\106\000\107\000\108\000\109\000\000\000\116\000\110\000\
\111\000\112\000\000\000\000\000\000\000\000\000\113\000\114\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\093\000\094\000\
\000\000\000\000\165\000\000\000\000\000\000\000\116\000\095\000\
\096\000\097\000\098\000\000\000\099\000\100\000\101\000\102\000\
\103\000\104\000\105\000\106\000\107\000\108\000\109\000\000\000\
\000\000\110\000\111\000\112\000\000\000\000\000\000\000\000\000\
\113\000\114\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\093\000\094\000\000\000\000\000\167\000\000\000\000\000\000\000\
\116\000\095\000\096\000\097\000\098\000\000\000\099\000\100\000\
\101\000\102\000\103\000\104\000\105\000\106\000\107\000\108\000\
\109\000\000\000\000\000\110\000\111\000\112\000\000\000\000\000\
\000\000\000\000\113\000\114\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\093\000\094\000\000\000\000\000\168\000\000\000\
\000\000\000\000\116\000\095\000\096\000\097\000\098\000\000\000\
\099\000\100\000\101\000\102\000\103\000\104\000\105\000\106\000\
\107\000\108\000\109\000\000\000\000\000\110\000\111\000\112\000\
\000\000\000\000\000\000\000\000\113\000\114\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\093\000\094\000\000\000\000\000\
\169\000\000\000\000\000\000\000\116\000\095\000\096\000\097\000\
\098\000\000\000\099\000\100\000\101\000\102\000\103\000\104\000\
\105\000\106\000\107\000\108\000\109\000\000\000\000\000\110\000\
\111\000\112\000\000\000\000\000\000\000\000\000\113\000\114\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\093\000\094\000\
\000\000\000\000\170\000\000\000\000\000\000\000\116\000\095\000\
\096\000\097\000\098\000\000\000\099\000\100\000\101\000\102\000\
\103\000\104\000\105\000\106\000\107\000\108\000\109\000\000\000\
\000\000\110\000\111\000\112\000\000\000\000\000\000\000\000\000\
\113\000\114\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\093\000\094\000\000\000\000\000\171\000\000\000\000\000\000\000\
\116\000\095\000\096\000\097\000\098\000\000\000\099\000\100\000\
\101\000\102\000\103\000\104\000\105\000\106\000\107\000\108\000\
\109\000\000\000\000\000\110\000\111\000\112\000\000\000\000\000\
\000\000\000\000\113\000\114\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\093\000\094\000\000\000\000\000\172\000\000\000\
\000\000\000\000\116\000\095\000\096\000\097\000\098\000\000\000\
\099\000\100\000\101\000\102\000\103\000\104\000\105\000\106\000\
\107\000\108\000\109\000\000\000\000\000\110\000\111\000\112\000\
\000\000\000\000\000\000\000\000\113\000\114\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\093\000\094\000\000\000\000\000\
\173\000\000\000\000\000\000\000\116\000\095\000\096\000\097\000\
\098\000\000\000\099\000\100\000\101\000\102\000\103\000\104\000\
\105\000\106\000\107\000\108\000\109\000\000\000\000\000\110\000\
\111\000\112\000\000\000\000\000\093\000\094\000\113\000\114\000\
\000\000\000\000\000\000\000\000\000\000\095\000\096\000\097\000\
\098\000\000\000\099\000\100\000\101\000\102\000\103\000\104\000\
\105\000\106\000\107\000\108\000\109\000\181\000\116\000\110\000\
\111\000\112\000\000\000\000\000\000\000\000\000\113\000\114\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\093\000\094\000\
\000\000\000\000\182\000\000\000\000\000\000\000\116\000\095\000\
\096\000\097\000\098\000\000\000\099\000\100\000\101\000\102\000\
\103\000\104\000\105\000\106\000\107\000\108\000\109\000\000\000\
\000\000\110\000\111\000\112\000\000\000\000\000\000\000\000\000\
\113\000\114\000\000\000\000\000\000\000\000\000\000\000\000\000\
\194\000\000\000\000\000\093\000\094\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\095\000\096\000\097\000\098\000\
\116\000\099\000\100\000\101\000\102\000\103\000\104\000\105\000\
\106\000\107\000\108\000\109\000\000\000\000\000\110\000\111\000\
\112\000\000\000\000\000\093\000\094\000\113\000\000\000\000\000\
\000\000\000\000\000\000\000\000\095\000\096\000\097\000\098\000\
\000\000\099\000\100\000\101\000\102\000\103\000\104\000\105\000\
\106\000\107\000\108\000\109\000\000\000\116\000\110\000\111\000\
\112\000\000\000\000\000\093\000\094\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\095\000\096\000\097\000\098\000\
\000\000\099\000\000\000\000\000\000\000\000\000\000\000\000\000\
\106\000\107\000\108\000\109\000\000\000\116\000\110\000\111\000\
\112\000"

let yycheck = "\001\000\
\000\000\000\000\013\000\001\001\015\000\005\001\053\001\011\000\
\001\000\011\000\059\000\060\000\023\000\024\000\001\001\002\001\
\004\001\021\000\049\001\021\000\067\001\174\000\004\001\176\000\
\177\000\004\001\012\001\013\001\001\001\002\001\041\000\042\000\
\043\000\044\000\045\000\046\000\047\000\048\000\049\000\050\000\
\051\000\052\000\001\001\002\001\001\001\002\001\004\001\066\001\
\004\001\004\001\050\001\004\001\066\001\064\000\065\000\053\001\
\049\001\059\000\060\000\070\000\071\000\072\000\073\000\074\000\
\075\000\076\000\115\000\054\001\067\001\000\000\067\001\067\001\
\067\001\067\001\052\001\067\001\067\001\067\001\053\001\049\001\
\054\001\053\001\093\000\094\000\095\000\096\000\097\000\098\000\
\099\000\100\000\101\000\102\000\103\000\104\000\105\000\106\000\
\107\000\108\000\109\000\110\000\111\000\112\000\113\000\114\000\
\053\001\116\000\004\001\118\000\053\001\050\001\057\001\054\001\
\054\001\115\000\068\001\066\001\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\050\001\068\001\000\000\052\001\197\000\
\068\001\054\001\054\001\180\000\054\001\182\000\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\196\000\046\001\047\001\255\255\255\255\
\050\001\051\001\255\255\166\000\054\001\055\001\056\001\255\255\
\255\255\059\001\060\001\061\001\062\001\063\001\064\001\255\255\
\066\001\255\255\181\000\069\001\255\255\004\001\255\255\255\255\
\255\255\255\255\180\000\255\255\182\000\012\001\013\001\014\001\
\015\001\016\001\017\001\018\001\019\001\020\001\021\001\022\001\
\023\001\024\001\196\000\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\033\001\034\001\035\001\036\001\255\255\255\255\
\039\001\040\001\041\001\255\255\255\255\255\255\255\255\046\001\
\047\001\255\255\255\255\050\001\051\001\255\255\255\255\054\001\
\055\001\056\001\255\255\255\255\059\001\060\001\061\001\062\001\
\063\001\064\001\255\255\066\001\067\001\255\255\069\001\070\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\001\001\002\001\003\001\004\001\255\255\006\001\007\001\
\008\001\009\001\010\001\011\001\255\255\255\255\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\255\255\255\255\023\001\
\255\255\025\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\037\001\038\001\255\255\
\255\255\255\255\042\001\043\001\044\001\045\001\255\255\255\255\
\048\001\049\001\050\001\051\001\052\001\052\001\255\255\055\001\
\255\255\255\255\004\001\059\001\060\001\061\001\062\001\063\001\
\064\001\065\001\012\001\013\001\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\021\001\022\001\023\001\024\001\255\255\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\033\001\
\034\001\035\001\036\001\255\255\255\255\039\001\040\001\041\001\
\255\255\255\255\255\255\255\255\046\001\047\001\255\255\255\255\
\050\001\051\001\255\255\255\255\054\001\055\001\056\001\255\255\
\255\255\059\001\060\001\061\001\062\001\063\001\064\001\004\001\
\066\001\255\255\255\255\069\001\070\001\255\255\255\255\012\001\
\013\001\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\021\001\022\001\023\001\024\001\255\255\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001\
\255\255\255\255\039\001\040\001\041\001\255\255\255\255\255\255\
\255\255\046\001\047\001\255\255\255\255\050\001\051\001\255\255\
\255\255\054\001\055\001\056\001\255\255\255\255\059\001\060\001\
\061\001\062\001\063\001\064\001\004\001\066\001\255\255\255\255\
\069\001\070\001\255\255\255\255\255\255\255\255\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\
\024\001\255\255\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\255\255\255\255\039\001\
\040\001\041\001\255\255\255\255\255\255\255\255\046\001\047\001\
\255\255\255\255\050\001\051\001\255\255\255\255\054\001\055\001\
\056\001\255\255\255\255\059\001\060\001\061\001\062\001\063\001\
\064\001\004\001\066\001\255\255\255\255\069\001\070\001\255\255\
\255\255\255\255\255\255\014\001\015\001\016\001\017\001\018\001\
\019\001\020\001\021\001\022\001\023\001\024\001\255\255\026\001\
\027\001\028\001\029\001\030\001\031\001\032\001\033\001\034\001\
\035\001\036\001\255\255\255\255\039\001\040\001\041\001\255\255\
\255\255\255\255\255\255\046\001\047\001\255\255\255\255\050\001\
\051\001\255\255\255\255\054\001\055\001\056\001\255\255\255\255\
\059\001\060\001\061\001\062\001\063\001\064\001\004\001\066\001\
\255\255\255\255\069\001\070\001\255\255\255\255\255\255\255\255\
\014\001\015\001\016\001\017\001\018\001\019\001\020\001\021\001\
\022\001\023\001\024\001\255\255\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\035\001\036\001\255\255\
\255\255\039\001\040\001\041\001\255\255\255\255\255\255\255\255\
\046\001\047\001\255\255\255\255\050\001\051\001\255\255\255\255\
\054\001\055\001\056\001\255\255\255\255\059\001\060\001\061\001\
\062\001\063\001\064\001\004\001\066\001\255\255\255\255\069\001\
\070\001\255\255\255\255\255\255\255\255\014\001\015\001\016\001\
\017\001\018\001\019\001\020\001\021\001\022\001\023\001\024\001\
\255\255\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\033\001\034\001\035\001\036\001\255\255\255\255\039\001\040\001\
\041\001\255\255\255\255\255\255\255\255\046\001\047\001\255\255\
\255\255\050\001\051\001\255\255\255\255\054\001\055\001\056\001\
\255\255\255\255\059\001\060\001\061\001\062\001\063\001\064\001\
\004\001\066\001\255\255\255\255\069\001\070\001\255\255\255\255\
\255\255\255\255\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\021\001\022\001\023\001\024\001\255\255\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\033\001\034\001\035\001\
\036\001\255\255\255\255\039\001\040\001\041\001\255\255\255\255\
\255\255\255\255\046\001\047\001\255\255\255\255\050\001\051\001\
\255\255\255\255\054\001\055\001\056\001\255\255\255\255\059\001\
\060\001\061\001\062\001\063\001\064\001\004\001\066\001\255\255\
\255\255\069\001\070\001\255\255\255\255\255\255\255\255\014\001\
\015\001\016\001\017\001\018\001\019\001\020\001\021\001\022\001\
\023\001\024\001\255\255\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\033\001\034\001\035\001\036\001\255\255\255\255\
\039\001\040\001\041\001\255\255\255\255\255\255\255\255\046\001\
\047\001\255\255\255\255\050\001\051\001\255\255\255\255\054\001\
\055\001\056\001\255\255\255\255\059\001\060\001\061\001\062\001\
\063\001\064\001\004\001\066\001\255\255\255\255\069\001\070\001\
\255\255\255\255\255\255\255\255\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\021\001\022\001\023\001\024\001\255\255\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\033\001\
\034\001\035\001\036\001\255\255\255\255\039\001\040\001\041\001\
\255\255\255\255\255\255\255\255\046\001\047\001\255\255\255\255\
\050\001\051\001\255\255\255\255\054\001\055\001\056\001\255\255\
\255\255\059\001\060\001\061\001\062\001\063\001\064\001\004\001\
\066\001\255\255\255\255\069\001\070\001\255\255\255\255\255\255\
\255\255\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\021\001\022\001\023\001\024\001\255\255\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001\
\255\255\255\255\039\001\040\001\041\001\255\255\255\255\255\255\
\255\255\046\001\047\001\255\255\255\255\050\001\051\001\255\255\
\255\255\054\001\055\001\056\001\255\255\255\255\059\001\060\001\
\061\001\062\001\063\001\064\001\004\001\066\001\255\255\255\255\
\069\001\070\001\255\255\255\255\255\255\255\255\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\
\024\001\255\255\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\255\255\255\255\039\001\
\040\001\041\001\255\255\255\255\255\255\255\255\046\001\047\001\
\255\255\255\255\050\001\051\001\255\255\255\255\054\001\055\001\
\056\001\255\255\255\255\059\001\060\001\061\001\062\001\063\001\
\064\001\004\001\066\001\255\255\255\255\069\001\070\001\255\255\
\255\255\255\255\255\255\014\001\015\001\016\001\017\001\018\001\
\019\001\020\001\021\001\022\001\023\001\024\001\255\255\026\001\
\027\001\028\001\029\001\030\001\031\001\032\001\033\001\034\001\
\035\001\036\001\255\255\255\255\039\001\040\001\041\001\255\255\
\255\255\255\255\255\255\046\001\047\001\255\255\255\255\050\001\
\051\001\255\255\255\255\054\001\055\001\056\001\255\255\255\255\
\059\001\060\001\061\001\062\001\063\001\064\001\004\001\066\001\
\255\255\255\255\069\001\070\001\255\255\255\255\255\255\255\255\
\014\001\015\001\016\001\017\001\018\001\019\001\020\001\021\001\
\022\001\023\001\024\001\255\255\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\035\001\036\001\255\255\
\255\255\039\001\040\001\041\001\255\255\255\255\255\255\255\255\
\046\001\047\001\255\255\255\255\050\001\051\001\255\255\255\255\
\054\001\055\001\056\001\255\255\255\255\059\001\060\001\061\001\
\062\001\063\001\064\001\004\001\066\001\255\255\255\255\069\001\
\070\001\255\255\255\255\255\255\255\255\014\001\015\001\016\001\
\017\001\018\001\019\001\020\001\021\001\022\001\023\001\024\001\
\255\255\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\033\001\034\001\035\001\036\001\255\255\255\255\039\001\040\001\
\041\001\255\255\255\255\255\255\255\255\046\001\047\001\255\255\
\255\255\050\001\051\001\255\255\255\255\054\001\055\001\056\001\
\255\255\255\255\059\001\060\001\061\001\062\001\063\001\064\001\
\004\001\066\001\255\255\255\255\069\001\070\001\255\255\255\255\
\255\255\255\255\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\021\001\022\001\023\001\024\001\255\255\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\033\001\034\001\035\001\
\036\001\255\255\255\255\039\001\040\001\041\001\255\255\255\255\
\255\255\255\255\046\001\047\001\255\255\255\255\050\001\051\001\
\255\255\255\255\054\001\055\001\056\001\255\255\255\255\059\001\
\060\001\061\001\062\001\063\001\064\001\004\001\066\001\255\255\
\255\255\069\001\070\001\255\255\255\255\255\255\255\255\014\001\
\015\001\016\001\017\001\018\001\019\001\020\001\021\001\022\001\
\023\001\024\001\255\255\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\033\001\034\001\035\001\036\001\255\255\255\255\
\039\001\040\001\041\001\255\255\255\255\255\255\255\255\046\001\
\047\001\255\255\255\255\050\001\051\001\255\255\255\255\054\001\
\055\001\056\001\255\255\255\255\059\001\060\001\061\001\062\001\
\063\001\064\001\004\001\066\001\255\255\255\255\069\001\070\001\
\255\255\255\255\255\255\255\255\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\021\001\022\001\023\001\024\001\255\255\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\033\001\
\034\001\035\001\036\001\255\255\255\255\039\001\040\001\041\001\
\255\255\255\255\255\255\255\255\046\001\047\001\255\255\255\255\
\050\001\051\001\255\255\255\255\054\001\055\001\056\001\255\255\
\255\255\059\001\060\001\061\001\062\001\063\001\064\001\004\001\
\066\001\255\255\255\255\069\001\070\001\255\255\255\255\255\255\
\255\255\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\021\001\022\001\023\001\024\001\255\255\026\001\027\001\028\001\
\029\001\030\001\031\001\032\001\033\001\034\001\035\001\036\001\
\255\255\255\255\039\001\040\001\041\001\255\255\255\255\255\255\
\255\255\046\001\047\001\255\255\255\255\050\001\051\001\255\255\
\255\255\054\001\055\001\056\001\255\255\255\255\059\001\060\001\
\061\001\062\001\063\001\064\001\004\001\066\001\255\255\255\255\
\069\001\070\001\255\255\255\255\255\255\255\255\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\021\001\022\001\023\001\
\024\001\255\255\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\255\255\255\255\039\001\
\040\001\041\001\255\255\255\255\255\255\255\255\046\001\047\001\
\255\255\255\255\050\001\051\001\255\255\255\255\054\001\055\001\
\056\001\255\255\255\255\059\001\060\001\061\001\062\001\063\001\
\064\001\004\001\066\001\255\255\255\255\069\001\070\001\255\255\
\255\255\255\255\255\255\014\001\015\001\016\001\017\001\018\001\
\019\001\020\001\021\001\022\001\023\001\024\001\255\255\026\001\
\027\001\028\001\029\001\030\001\031\001\032\001\033\001\034\001\
\035\001\036\001\255\255\255\255\039\001\040\001\041\001\255\255\
\255\255\255\255\255\255\046\001\047\001\255\255\255\255\050\001\
\051\001\255\255\255\255\054\001\055\001\056\001\255\255\255\255\
\059\001\060\001\061\001\062\001\063\001\064\001\004\001\066\001\
\255\255\255\255\069\001\070\001\255\255\255\255\255\255\255\255\
\014\001\015\001\016\001\017\001\018\001\019\001\020\001\021\001\
\022\001\023\001\024\001\255\255\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\035\001\036\001\255\255\
\255\255\039\001\040\001\041\001\255\255\255\255\255\255\255\255\
\046\001\047\001\255\255\255\255\050\001\051\001\255\255\255\255\
\054\001\055\001\056\001\255\255\255\255\059\001\060\001\061\001\
\062\001\063\001\064\001\004\001\066\001\255\255\255\255\069\001\
\070\001\255\255\255\255\255\255\255\255\014\001\015\001\016\001\
\017\001\018\001\019\001\020\001\021\001\022\001\023\001\024\001\
\255\255\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\033\001\034\001\035\001\036\001\255\255\255\255\039\001\040\001\
\041\001\255\255\255\255\255\255\255\255\046\001\047\001\255\255\
\255\255\050\001\051\001\255\255\255\255\054\001\055\001\056\001\
\255\255\255\255\059\001\060\001\061\001\062\001\063\001\064\001\
\004\001\066\001\255\255\255\255\069\001\070\001\255\255\255\255\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\021\001\022\001\023\001\024\001\255\255\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\033\001\034\001\035\001\
\036\001\255\255\255\255\039\001\040\001\041\001\255\255\255\255\
\012\001\013\001\046\001\047\001\255\255\255\255\255\255\051\001\
\255\255\255\255\022\001\055\001\024\001\255\255\026\001\059\001\
\060\001\061\001\062\001\063\001\064\001\004\001\034\001\035\001\
\036\001\255\255\070\001\255\255\040\001\041\001\255\255\014\001\
\015\001\016\001\017\001\018\001\019\001\020\001\021\001\255\255\
\023\001\255\255\255\255\255\255\027\001\028\001\029\001\030\001\
\031\001\032\001\033\001\255\255\255\255\255\255\255\255\255\255\
\039\001\255\255\255\255\255\255\255\255\255\255\255\255\046\001\
\047\001\255\255\255\255\050\001\051\001\255\255\255\255\054\001\
\055\001\056\001\255\255\255\255\059\001\060\001\061\001\062\001\
\063\001\064\001\004\001\066\001\255\255\255\255\069\001\070\001\
\255\255\255\255\255\255\255\255\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\021\001\255\255\023\001\255\255\255\255\
\255\255\027\001\028\001\029\001\030\001\031\001\032\001\033\001\
\255\255\255\255\255\255\255\255\255\255\039\001\255\255\255\255\
\255\255\255\255\255\255\255\255\046\001\047\001\255\255\255\255\
\050\001\051\001\255\255\255\255\054\001\055\001\056\001\255\255\
\255\255\059\001\060\001\061\001\062\001\063\001\064\001\004\001\
\066\001\255\255\255\255\069\001\070\001\255\255\255\255\255\255\
\255\255\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\021\001\255\255\023\001\255\255\255\255\255\255\027\001\028\001\
\029\001\030\001\031\001\032\001\033\001\255\255\255\255\255\255\
\255\255\255\255\039\001\255\255\255\255\255\255\255\255\255\255\
\255\255\046\001\047\001\255\255\255\255\050\001\051\001\255\255\
\255\255\054\001\055\001\056\001\255\255\255\255\059\001\060\001\
\061\001\062\001\063\001\064\001\004\001\066\001\255\255\255\255\
\069\001\070\001\255\255\255\255\255\255\255\255\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\021\001\255\255\023\001\
\255\255\255\255\255\255\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\255\255\255\255\255\255\255\255\255\255\039\001\
\255\255\255\255\255\255\255\255\255\255\255\255\046\001\047\001\
\255\255\255\255\050\001\051\001\255\255\255\255\054\001\055\001\
\056\001\255\255\255\255\059\001\060\001\061\001\062\001\063\001\
\064\001\004\001\066\001\255\255\255\255\069\001\070\001\255\255\
\255\255\255\255\255\255\014\001\015\001\016\001\017\001\018\001\
\019\001\020\001\021\001\255\255\023\001\255\255\255\255\255\255\
\027\001\028\001\029\001\030\001\031\001\032\001\033\001\255\255\
\255\255\255\255\255\255\255\255\039\001\255\255\255\255\255\255\
\255\255\255\255\255\255\046\001\047\001\255\255\255\255\050\001\
\051\001\255\255\255\255\054\001\055\001\056\001\255\255\255\255\
\059\001\060\001\061\001\062\001\063\001\064\001\004\001\066\001\
\255\255\255\255\069\001\070\001\255\255\255\255\255\255\255\255\
\014\001\015\001\016\001\017\001\018\001\019\001\020\001\255\255\
\255\255\255\255\255\255\255\255\255\255\027\001\028\001\029\001\
\030\001\031\001\032\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\046\001\047\001\255\255\255\255\050\001\051\001\255\255\255\255\
\054\001\055\001\056\001\255\255\255\255\059\001\060\001\061\001\
\062\001\063\001\064\001\004\001\066\001\255\255\255\255\069\001\
\070\001\255\255\255\255\255\255\255\255\014\001\015\001\016\001\
\017\001\018\001\019\001\020\001\255\255\255\255\255\255\255\255\
\255\255\255\255\027\001\028\001\029\001\030\001\031\001\032\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\046\001\047\001\255\255\
\255\255\050\001\051\001\255\255\255\255\054\001\055\001\056\001\
\255\255\255\255\059\001\060\001\061\001\062\001\063\001\064\001\
\004\001\066\001\255\255\255\255\069\001\070\001\255\255\255\255\
\255\255\255\255\014\001\015\001\016\001\017\001\018\001\019\001\
\020\001\255\255\255\255\255\255\255\255\255\255\255\255\027\001\
\028\001\029\001\030\001\031\001\032\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\046\001\047\001\255\255\255\255\050\001\051\001\
\255\255\255\255\054\001\055\001\056\001\255\255\255\255\059\001\
\060\001\061\001\062\001\063\001\064\001\004\001\066\001\255\255\
\255\255\069\001\070\001\255\255\255\255\255\255\255\255\014\001\
\015\001\016\001\017\001\018\001\019\001\020\001\255\255\255\255\
\255\255\255\255\255\255\255\255\027\001\028\001\029\001\030\001\
\031\001\032\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\046\001\
\047\001\255\255\255\255\050\001\051\001\255\255\255\255\054\001\
\055\001\056\001\255\255\255\255\059\001\060\001\061\001\062\001\
\063\001\064\001\004\001\066\001\255\255\255\255\069\001\070\001\
\255\255\255\255\255\255\255\255\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\255\255\255\255\255\255\255\255\255\255\
\255\255\027\001\028\001\029\001\030\001\031\001\032\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\046\001\047\001\255\255\255\255\
\050\001\051\001\255\255\255\255\054\001\055\001\056\001\255\255\
\255\255\059\001\060\001\061\001\062\001\063\001\064\001\004\001\
\066\001\255\255\255\255\069\001\070\001\255\255\255\255\255\255\
\255\255\014\001\015\001\016\001\017\001\018\001\019\001\020\001\
\255\255\255\255\255\255\255\255\004\001\255\255\027\001\028\001\
\029\001\030\001\031\001\032\001\255\255\255\255\014\001\015\001\
\016\001\017\001\018\001\019\001\020\001\255\255\255\255\255\255\
\255\255\046\001\047\001\255\255\255\255\050\001\051\001\255\255\
\255\255\054\001\055\001\056\001\255\255\255\255\059\001\060\001\
\061\001\062\001\063\001\064\001\255\255\066\001\046\001\047\001\
\069\001\070\001\050\001\051\001\255\255\255\255\054\001\055\001\
\056\001\255\255\255\255\059\001\060\001\061\001\062\001\063\001\
\064\001\004\001\066\001\255\255\255\255\069\001\255\255\255\255\
\255\255\255\255\255\255\014\001\015\001\016\001\017\001\018\001\
\019\001\020\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\047\001\255\255\255\255\050\001\
\051\001\255\255\255\255\054\001\055\001\056\001\255\255\255\255\
\059\001\060\001\061\001\062\001\063\001\064\001\255\255\066\001\
\255\255\255\255\069\001\001\001\002\001\003\001\004\001\255\255\
\006\001\007\001\008\001\009\001\010\001\011\001\255\255\255\255\
\255\255\255\255\004\001\255\255\255\255\255\255\255\255\255\255\
\255\255\023\001\255\255\025\001\014\001\015\001\016\001\017\001\
\018\001\019\001\020\001\255\255\255\255\255\255\255\255\037\001\
\038\001\255\255\255\255\255\255\042\001\043\001\044\001\045\001\
\255\255\255\255\048\001\049\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\051\001\255\255\065\001\255\255\055\001\012\001\013\001\
\255\255\059\001\060\001\061\001\062\001\063\001\064\001\021\001\
\022\001\023\001\024\001\255\255\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\035\001\036\001\255\255\
\255\255\039\001\040\001\041\001\255\255\255\255\255\255\255\255\
\046\001\047\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\056\001\012\001\013\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\021\001\022\001\023\001\024\001\
\070\001\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\033\001\034\001\035\001\036\001\255\255\255\255\039\001\040\001\
\041\001\255\255\255\255\255\255\255\255\046\001\047\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\012\001\013\001\255\255\
\255\255\066\001\255\255\255\255\255\255\070\001\021\001\022\001\
\023\001\024\001\255\255\026\001\027\001\028\001\029\001\030\001\
\031\001\032\001\033\001\034\001\035\001\036\001\255\255\255\255\
\039\001\040\001\041\001\255\255\255\255\255\255\255\255\046\001\
\047\001\255\255\255\255\255\255\255\255\255\255\255\255\054\001\
\255\255\255\255\012\001\013\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\021\001\022\001\023\001\024\001\070\001\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\033\001\
\034\001\035\001\036\001\255\255\255\255\039\001\040\001\041\001\
\255\255\255\255\255\255\255\255\046\001\047\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\012\001\013\001\255\255\255\255\
\066\001\255\255\255\255\255\255\070\001\021\001\022\001\023\001\
\024\001\255\255\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\255\255\255\255\039\001\
\040\001\041\001\255\255\255\255\012\001\013\001\046\001\047\001\
\255\255\255\255\050\001\255\255\255\255\021\001\022\001\023\001\
\024\001\255\255\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\255\255\070\001\039\001\
\040\001\041\001\255\255\255\255\012\001\013\001\046\001\047\001\
\255\255\255\255\050\001\255\255\255\255\021\001\022\001\023\001\
\024\001\255\255\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\255\255\070\001\039\001\
\040\001\041\001\255\255\255\255\255\255\255\255\046\001\047\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\012\001\013\001\
\255\255\255\255\066\001\255\255\255\255\255\255\070\001\021\001\
\022\001\023\001\024\001\255\255\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\035\001\036\001\255\255\
\255\255\039\001\040\001\041\001\255\255\255\255\255\255\255\255\
\046\001\047\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\012\001\013\001\255\255\255\255\066\001\255\255\255\255\255\255\
\070\001\021\001\022\001\023\001\024\001\255\255\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\033\001\034\001\035\001\
\036\001\255\255\255\255\039\001\040\001\041\001\255\255\255\255\
\255\255\255\255\046\001\047\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\012\001\013\001\255\255\255\255\066\001\255\255\
\255\255\255\255\070\001\021\001\022\001\023\001\024\001\255\255\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\033\001\
\034\001\035\001\036\001\255\255\255\255\039\001\040\001\041\001\
\255\255\255\255\255\255\255\255\046\001\047\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\012\001\013\001\255\255\255\255\
\066\001\255\255\255\255\255\255\070\001\021\001\022\001\023\001\
\024\001\255\255\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\255\255\255\255\039\001\
\040\001\041\001\255\255\255\255\255\255\255\255\046\001\047\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\012\001\013\001\
\255\255\255\255\066\001\255\255\255\255\255\255\070\001\021\001\
\022\001\023\001\024\001\255\255\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\035\001\036\001\255\255\
\255\255\039\001\040\001\041\001\255\255\255\255\255\255\255\255\
\046\001\047\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\012\001\013\001\255\255\255\255\066\001\255\255\255\255\255\255\
\070\001\021\001\022\001\023\001\024\001\255\255\026\001\027\001\
\028\001\029\001\030\001\031\001\032\001\033\001\034\001\035\001\
\036\001\255\255\255\255\039\001\040\001\041\001\255\255\255\255\
\255\255\255\255\046\001\047\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\012\001\013\001\255\255\255\255\066\001\255\255\
\255\255\255\255\070\001\021\001\022\001\023\001\024\001\255\255\
\026\001\027\001\028\001\029\001\030\001\031\001\032\001\033\001\
\034\001\035\001\036\001\255\255\255\255\039\001\040\001\041\001\
\255\255\255\255\255\255\255\255\046\001\047\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\012\001\013\001\255\255\255\255\
\066\001\255\255\255\255\255\255\070\001\021\001\022\001\023\001\
\024\001\255\255\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\255\255\255\255\039\001\
\040\001\041\001\255\255\255\255\012\001\013\001\046\001\047\001\
\255\255\255\255\255\255\255\255\255\255\021\001\022\001\023\001\
\024\001\255\255\026\001\027\001\028\001\029\001\030\001\031\001\
\032\001\033\001\034\001\035\001\036\001\069\001\070\001\039\001\
\040\001\041\001\255\255\255\255\255\255\255\255\046\001\047\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\012\001\013\001\
\255\255\255\255\066\001\255\255\255\255\255\255\070\001\021\001\
\022\001\023\001\024\001\255\255\026\001\027\001\028\001\029\001\
\030\001\031\001\032\001\033\001\034\001\035\001\036\001\255\255\
\255\255\039\001\040\001\041\001\255\255\255\255\255\255\255\255\
\046\001\047\001\255\255\255\255\255\255\255\255\255\255\255\255\
\054\001\255\255\255\255\012\001\013\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\021\001\022\001\023\001\024\001\
\070\001\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\033\001\034\001\035\001\036\001\255\255\255\255\039\001\040\001\
\041\001\255\255\255\255\012\001\013\001\046\001\255\255\255\255\
\255\255\255\255\255\255\255\255\021\001\022\001\023\001\024\001\
\255\255\026\001\027\001\028\001\029\001\030\001\031\001\032\001\
\033\001\034\001\035\001\036\001\255\255\070\001\039\001\040\001\
\041\001\255\255\255\255\012\001\013\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\021\001\022\001\023\001\024\001\
\255\255\026\001\255\255\255\255\255\255\255\255\255\255\255\255\
\033\001\034\001\035\001\036\001\255\255\070\001\039\001\040\001\
\041\001"

let yynames_const = "\
  DEF_VN\000\
  DEF_VF\000\
  DEF_MN\000\
  DEF_MF\000\
  INT_T\000\
  FLOAT_T\000\
  BOOL_T\000\
  VECTOR_N_T\000\
  VECTOR_F_T\000\
  MATRIX_N_T\000\
  MATRIX_F_T\000\
  ADD\000\
  MUL\000\
  SUB\000\
  DIV\000\
  ABS\000\
  MODULO\000\
  EQ\000\
  NEQ\000\
  LT\000\
  GT\000\
  LE\000\
  GE\000\
  ADD_VEC\000\
  SCAL_VEC\000\
  DOT_PROD\000\
  ANGLE_VEC\000\
  MAG_VEC\000\
  DIM_VEC\000\
  ADD_MAT\000\
  SCAL_MAT\000\
  MAT_MUL_MAT\000\
  TRP_MAT\000\
  DET_MAT\000\
  INV\000\
  NOT\000\
  AND\000\
  OR\000\
  NEG\000\
  LPAREN\000\
  RPAREN\000\
  LBRACE\000\
  RBRACE\000\
  LSQUARE\000\
  RSQUARE\000\
  IF\000\
  THEN\000\
  ELSE\000\
  ELSE_IF\000\
  WHILE\000\
  FOR\000\
  RETURN\000\
  BREAK\000\
  CONTINUE\000\
  PRINT\000\
  INPUT\000\
  SEMICOLON\000\
  ASSIGN\000\
  COMMA\000\
  COLON\000\
  QMARK\000\
  EOF\000\
  "

let yynames_block = "\
  CONS_N\000\
  CONS_F\000\
  CONS_B\000\
  IDENT\000\
  FNAME\000\
  CONS_VN\000\
  CONS_VF\000\
  CONS_MN\000\
  CONS_MF\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : float) in
    Obj.repr(
# 92 "src/my_parser.mly"
                        ( () )
# 1254 "src/my_parser.ml"
               : 'inv_vec_mem))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : float) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 93 "src/my_parser.mly"
                        ( () )
# 1262 "src/my_parser.ml"
               : 'inv_vec_mem))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'inv_vec_mem) in
    Obj.repr(
# 94 "src/my_parser.mly"
                             ( () )
# 1270 "src/my_parser.ml"
               : 'inv_vec_mem))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : float) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'inv_vec_mem) in
    Obj.repr(
# 95 "src/my_parser.mly"
                             ( () )
# 1278 "src/my_parser.ml"
               : 'inv_vec_mem))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : int) in
    Obj.repr(
# 99 "src/my_parser.mly"
                                          ( raise (Type_Mismatch "Empty Vector/Row of matrix not allowed") )
# 1285 "src/my_parser.ml"
               : 'inv_vec))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : int) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'inv_vec_mem) in
    Obj.repr(
# 100 "src/my_parser.mly"
                                          ( raise (Type_Mismatch "Mixed Typing Detected in Vector") )
# 1293 "src/my_parser.ml"
               : 'inv_vec))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : 'inv_vec_mem) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'inv_mat_rows) in
    Obj.repr(
# 104 "src/my_parser.mly"
                                                  ( () )
# 1301 "src/my_parser.ml"
               : 'inv_mat_rows))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'inv_vec_mem) in
    Obj.repr(
# 105 "src/my_parser.mly"
                                                  ( () )
# 1308 "src/my_parser.ml"
               : 'inv_mat_rows))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : int) in
    let _2 = (Parsing.peek_val __caml_parser_env 3 : int) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'inv_mat_rows) in
    Obj.repr(
# 109 "src/my_parser.mly"
                                              ( raise (Type_Mismatch "Invalid matrix definition") )
# 1317 "src/my_parser.ml"
               : 'inv_mat))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 117 "src/my_parser.mly"
           ( VAL(INT_V(_1)) )
# 1324 "src/my_parser.ml"
               : 'constant))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : float) in
    Obj.repr(
# 118 "src/my_parser.mly"
           ( VAL(FLT_V(_1)) )
# 1331 "src/my_parser.ml"
               : 'constant))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : bool) in
    Obj.repr(
# 119 "src/my_parser.mly"
           ( VAL(BL_V(_1)) )
# 1338 "src/my_parser.ml"
               : 'constant))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * int list) in
    Obj.repr(
# 120 "src/my_parser.mly"
            ( 
      let (dim, v) = _1 in
      if not (vec_dim_check dim v) then
          raise (Dimension_Mismatch (
              "Expected vector of dimension " ^ string_of_int dim ^
              ", but got dimension " ^ string_of_int (List.length v)
          ))
      else
          VAL (NVEC_V v)
  )
# 1354 "src/my_parser.ml"
               : 'constant))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * float list) in
    Obj.repr(
# 130 "src/my_parser.mly"
            ( 
      let (dim, v) = _1 in
      if not (vec_dim_check dim v) then
          raise (Dimension_Mismatch (
              "Expected vector of dimension " ^ string_of_int dim ^
              ", but got dimension " ^ string_of_int (List.length v)
          ))
      else
          VAL (FVEC_V v)
  )
# 1370 "src/my_parser.ml"
               : 'constant))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * int * int list list) in
    Obj.repr(
# 140 "src/my_parser.mly"
            ( 
      let (rows, cols, m) = _1 in
      if not (mat_dim_check rows cols m) then
          raise (Dimension_Mismatch (
              "Expected matrix with " ^ string_of_int rows ^ 
              " rows and " ^ string_of_int cols ^ 
              " columns, but found incorrect dimensions"
          ))
      else
          VAL (NMAT_V m)
  )
# 1387 "src/my_parser.ml"
               : 'constant))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int * int * float list list) in
    Obj.repr(
# 151 "src/my_parser.mly"
            ( 
      let (rows, cols, m) = _1 in
      if not (mat_dim_check rows cols m) then
          raise (Dimension_Mismatch (
              "Expected matrix with " ^ string_of_int rows ^ 
              " rows and " ^ string_of_int cols ^ 
              " columns, but found inconsistent dimensions"
          ))
      else
          VAL (FMAT_V m)
  )
# 1404 "src/my_parser.ml"
               : 'constant))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'inv_vec) in
    Obj.repr(
# 162 "src/my_parser.mly"
            ( _1 )
# 1411 "src/my_parser.ml"
               : 'constant))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'inv_mat) in
    Obj.repr(
# 163 "src/my_parser.mly"
            ( _1 )
# 1418 "src/my_parser.ml"
               : 'constant))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 171 "src/my_parser.mly"
                               ( X_Slice(_1, _3) )
# 1426 "src/my_parser.ml"
               : 'slice_expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 6 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 4 : 'expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 172 "src/my_parser.mly"
                                                    ( XY_Slice(_1, _3, _6) )
# 1435 "src/my_parser.ml"
               : 'slice_expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'constant) in
    Obj.repr(
# 176 "src/my_parser.mly"
             ( _1 )
# 1442 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 177 "src/my_parser.mly"
          ( IDF(_1) )
# 1449 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'slice_expr) in
    Obj.repr(
# 178 "src/my_parser.mly"
               ( _1 )
# 1456 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 179 "src/my_parser.mly"
                                 ( BIN_OP (And, _1, _3) )
# 1464 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 180 "src/my_parser.mly"
                                 ( BIN_OP (Or, _1, _3) )
# 1472 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 181 "src/my_parser.mly"
                                 ( BIN_OP (Add, _1, _3) )
# 1480 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 182 "src/my_parser.mly"
                                 ( BIN_OP (Sub, _1, _3) )
# 1488 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 183 "src/my_parser.mly"
                                 ( BIN_OP (Mul, _1, _3) )
# 1496 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 184 "src/my_parser.mly"
                                 ( BIN_OP (Div, _1, _3) )
# 1504 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 185 "src/my_parser.mly"
                                 ( BIN_OP (Modulo, _1, _3) )
# 1512 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 186 "src/my_parser.mly"
                                 ( BIN_OP (Eq, _1, _3) )
# 1520 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 187 "src/my_parser.mly"
                                 ( BIN_OP (Neq, _1, _3) )
# 1528 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 188 "src/my_parser.mly"
                                 ( BIN_OP (Lt, _1, _3) )
# 1536 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 189 "src/my_parser.mly"
                                 ( BIN_OP (Gt, _1, _3) )
# 1544 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 190 "src/my_parser.mly"
                                 ( BIN_OP (Leq, _1, _3) )
# 1552 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 191 "src/my_parser.mly"
                                 ( BIN_OP (Geq, _1, _3) )
# 1560 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 192 "src/my_parser.mly"
                                 ( BIN_OP (Scal_Vec, _1, _3) )
# 1568 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 193 "src/my_parser.mly"
                                 ( BIN_OP (Scal_Mat, _1, _3) )
# 1576 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 194 "src/my_parser.mly"
                                 ( BIN_OP (Add_Vec, _1, _3) )
# 1584 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 195 "src/my_parser.mly"
                                 ( BIN_OP (Add_Mat, _1, _3) )
# 1592 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 196 "src/my_parser.mly"
                                 ( BIN_OP (Mat_Mul_Mat, _1, _3) )
# 1600 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 197 "src/my_parser.mly"
                                 ( BIN_OP (Dot_Prod, _1, _3) )
# 1608 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 198 "src/my_parser.mly"
                                 ( BIN_OP (Angle, _1, _3) )
# 1616 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 199 "src/my_parser.mly"
                                 ( BIN_OP (Def_mn, _1, _3) )
# 1624 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 200 "src/my_parser.mly"
                                 ( BIN_OP (Def_mf, _1, _3) )
# 1632 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 201 "src/my_parser.mly"
                                 ( UN_OP (Def_vn, _2) )
# 1639 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 202 "src/my_parser.mly"
                                 ( UN_OP (Def_vf, _2) )
# 1646 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 203 "src/my_parser.mly"
                                 ( UN_OP (Mag_v, _2) )
# 1653 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 204 "src/my_parser.mly"
                                 ( UN_OP (Dim, _2) )
# 1660 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 205 "src/my_parser.mly"
                                 ( UN_OP (Not, _2) )
# 1667 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 206 "src/my_parser.mly"
                                 ( UN_OP (Neg, _2) )
# 1674 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 207 "src/my_parser.mly"
                                 ( UN_OP (Neg, _2) )
# 1681 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 208 "src/my_parser.mly"
                                 ( UN_OP (Trp_Mat, _2) )
# 1688 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 209 "src/my_parser.mly"
                                 ( UN_OP (Det, _2) )
# 1695 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 210 "src/my_parser.mly"
                                 ( UN_OP (Abs, _2) )
# 1702 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 211 "src/my_parser.mly"
                                 ( UN_OP (Inv, _2) )
# 1709 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    Obj.repr(
# 212 "src/my_parser.mly"
                                 ( Input None )
# 1715 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 1 : string) in
    Obj.repr(
# 213 "src/my_parser.mly"
                                 ( Input (Some _3) )
# 1722 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _5 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 214 "src/my_parser.mly"
                                 ( COND (_1, _3, _5) )
# 1731 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 215 "src/my_parser.mly"
                                 ( _2 )
# 1738 "src/my_parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 223 "src/my_parser.mly"
                                                    ( Assign (Some T_INT, _2, _4) )
# 1746 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 224 "src/my_parser.mly"
                                                    ( Assign (Some T_FLOAT, _2, _4) )
# 1754 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 225 "src/my_parser.mly"
                                                    ( Assign (Some T_BOOL, _2, _4) )
# 1762 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 226 "src/my_parser.mly"
                                                    ( Assign (Some T_VEC_N, _2, _4) )
# 1770 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 227 "src/my_parser.mly"
                                                   ( Assign (Some T_VEC_F, _2, _4) )
# 1778 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 228 "src/my_parser.mly"
                                                   ( Assign (Some T_MAT_N, _2, _4) )
# 1786 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 229 "src/my_parser.mly"
                                                   ( Assign (Some T_MAT_F, _2, _4) )
# 1794 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'stmt) in
    Obj.repr(
# 231 "src/my_parser.mly"
                                   ( While (_2, _3) )
# 1802 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 5 : 'stmt) in
    let _4 = (Parsing.peek_val __caml_parser_env 4 : 'expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 2 : 'stmt) in
    let _8 = (Parsing.peek_val __caml_parser_env 0 : 'stmt) in
    Obj.repr(
# 232 "src/my_parser.mly"
                                                      ( For (_3, _4, _6, _8) )
# 1812 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'stmt) in
    Obj.repr(
# 233 "src/my_parser.mly"
                                                ( Ifte (_2, _4, None) )
# 1820 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 4 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'stmt) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : 'stmt) in
    Obj.repr(
# 234 "src/my_parser.mly"
                                                   ( Ifte (_2, _4, Some _6) )
# 1829 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 236 "src/my_parser.mly"
                                               ( Assign (None, _1, _3) )
# 1837 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : 'slice_expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 237 "src/my_parser.mly"
                                                    ( Sl_Assign (_1, _3) )
# 1845 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    Obj.repr(
# 238 "src/my_parser.mly"
                                                   ( Print _3 )
# 1852 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 239 "src/my_parser.mly"
                                                    ( Return _2 )
# 1859 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    Obj.repr(
# 240 "src/my_parser.mly"
                                                    ( Break )
# 1865 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    Obj.repr(
# 241 "src/my_parser.mly"
                                                    ( Continue )
# 1871 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'stmt_list) in
    Obj.repr(
# 242 "src/my_parser.mly"
                                                    ( Block _2 )
# 1878 "src/my_parser.ml"
               : 'stmt))
; (fun __caml_parser_env ->
    Obj.repr(
# 246 "src/my_parser.mly"
                           ( [] )
# 1884 "src/my_parser.ml"
               : 'stmt_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'stmt) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'stmt_list) in
    Obj.repr(
# 247 "src/my_parser.mly"
                           ( _1 :: _2 )
# 1892 "src/my_parser.ml"
               : 'stmt_list))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'stmt_list) in
    Obj.repr(
# 255 "src/my_parser.mly"
                ( _1 )
# 1899 "src/my_parser.ml"
               : My_ast.program))
(* Entry program *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let program (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : My_ast.program)
